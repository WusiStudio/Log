CMAKE_MINIMUM_REQUIRED (VERSION 3.4)

PROJECT (log VERSION 0.0.1)

SET(BUILD_TESTING flase)

#指定头文件路径
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)

#读取Src目录
AUX_SOURCE_DIRECTORY(src DIR_SRCS)

#编译文件
ADD_LIBRARY(${PROJECT_NAME} ${DIR_SRCS})
ADD_EXECUTABLE(LogTest test/LogTest.cpp ${DIR_SRCS})

#输出路径
IF(PROJECT_ROOT_DIR)
    SET(LIBRARY_OUTPUT_PATH ${PROJECT_ROOT_DIR}/build/bin)
    SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_ROOT_DIR}/build/bin)
ELSE()
    SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/build/bin)
    SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/build/bin)
ENDIF()

#链接库
IF(WIN32)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME})
ELSEIF(APPLE)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} pthread)
ELSEIF(UNIX)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} pthread)
ENDIF()

#设置编译选项
IF(WIN32)
    # DEBUG RELEASE
    SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -m64 -std=c++11 -Wall")
    SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -m64 -std=c++11 -Wall")

ELSEIF(APPLE)
    SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -m64 -std=c++11 -O0 -Wall -g")
    SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -m64 -std=c++11 -O3 -Wall")

ELSEIF(UNIX)
    SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -m64 -std=c++11 -O0 -Wall -g")
    SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -m64 -std=c++11 -O3 -Wall")
ENDIF()
